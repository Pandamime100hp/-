name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check_changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up paths filter
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'
    outputs:
      client_changed: ${{ steps.filter.outputs.client }}
      server_changed: ${{ steps.filter.outputs.server }}

  build_client:
    if: needs.check_changes.outputs.client_changed == 'true'
    needs: check_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Client Dependencies
        run: cd client && npm install

      - name: Build Client
        run: cd client && npm run build

      - name: Upload Client Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: client/build

  build_server:
    if: needs.check_changes.outputs.server_changed == 'true'
    needs: check_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Server Dependencies
        run: cd server && npm install

      - name: Build Server
        run: cd server && npm run build

      - name: Upload Server Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/build

  deploy_client:
    if: needs.build_client.result == 'success'
    runs-on: ubuntu-latest
    needs: build_client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Client Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: client_build
          path: client/build

      - name: Deploy Client
        env:
          CLIENT_DEPLOY_URL: ${{ secrets.CLIENT_DEPLOY_URL }}
        run: |
          curl $CLIENT_DEPLOY_URL

  deploy_server:
    if: needs.build_server.result == 'success'
    runs-on: ubuntu-latest
    needs: build_server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Server Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: server_build
          path: server/build

      - name: Deploy Server
        env:
          SERVER_DEPLOY_URL: ${{ secrets.SERVER_DEPLOY_URL }}
        run: |
          curl $SERVER_DEPLOY_URL
