# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check-changes:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Set up paths filter
          id: filter
          uses: dorny/paths-filter@v2
          with:
            filters: |
              client:
                - 'client/**'
              server:
                - 'server/**'

  build-client:
    if: steps.filter.outputs.client == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Client Dependencies
        run: cd client && npm install

      - name: Build Client
        run: cd client && npm run build

      - name: Upload Client Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client-build
          path: client/build

  build-server:
    if: steps.filter.outputs.server == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Server Dependencies
        run: cd server && npm install

      - name: Build Server
        run: cd server && npm run build

      - name: Upload Server Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: server-build
          path: server/build

  deploy-client:
    if: needs.build-client.outputs.client == 'true'
    runs-on: ubuntu-latest
    needs: build-client
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Client Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: client-build
          path: client/build

      - name: Deploy Client
        env:
          CLIENT_DEPLOY_URL: ${{ secrets.CLIENT_DEPLOY_URL }}
        run: |
          curl -X POST $CLIENT_DEPLOY_URL -F "build=@client/build"

  deploy-server:
    if: needs.build-server.outputs.server == 'true'
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Server Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: server-build
          path: server/build

      - name: Deploy Server
        env:
          SERVER_DEPLOY_URL: ${{ secrets.SERVER_DEPLOY_URL }}
        run: |
          curl -X POST $SERVER_DEPLOY_URL -F "build=@server/build"